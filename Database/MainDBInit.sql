-- MySQL Script generated by MySQL Workbench
-- Sat Mar 30 22:20:17 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sh_main
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sh_main` ;

-- -----------------------------------------------------
-- Schema sh_main
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sh_main` DEFAULT CHARACTER SET utf8 ;
USE `sh_main` ;

-- -----------------------------------------------------
-- Table `sh_main`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Customer` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Customer` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(256) NOT NULL,
  `Address` VARCHAR(256) NOT NULL,
  `Phone` VARCHAR(18) NOT NULL,
  `Email` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Storehouse`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Storehouse` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Storehouse` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Address` VARCHAR(256) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Product` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Product` (
  `SKU` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(256) NOT NULL,
  PRIMARY KEY (`SKU`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Supplier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Supplier` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Supplier` (
  `Id` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(256) NOT NULL,
  `Address` VARCHAR(256) NOT NULL,
  `Phone` VARCHAR(18) NOT NULL,
  `Email` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`Id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Storehouse_Has_Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Storehouse_Has_Product` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Storehouse_Has_Product` (
  `StorehouseId` INT NOT NULL,
  `ProductSKU` VARCHAR(45) NOT NULL,
  `Reminder` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`StorehouseId`, `ProductSKU`),
  INDEX `fk_Storehouse_has_Product_Product1_idx` (`ProductSKU` ASC) VISIBLE,
  INDEX `fk_Storehouse_has_Product_Storehouse_idx` (`StorehouseId` ASC) VISIBLE,
  CONSTRAINT `fk_Storehouse_has_Product_Storehouse`
    FOREIGN KEY (`StorehouseId`)
    REFERENCES `sh_main`.`Storehouse` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Storehouse_has_Product_Product1`
    FOREIGN KEY (`ProductSKU`)
    REFERENCES `sh_main`.`Product` (`SKU`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Supply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Supply` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Supply` (
  `Id` INT NOT NULL,
  `StorehouseId` INT NOT NULL,
  `SupplierId` INT NOT NULL,
  `DateTime` DATETIME NOT NULL,
  `TotalPrice` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`Id`, `StorehouseId`, `SupplierId`),
  INDEX `fk_Supply_Storehouse1_idx` (`StorehouseId` ASC) VISIBLE,
  INDEX `fk_Supply_Supplier1_idx` (`SupplierId` ASC) VISIBLE,
  CONSTRAINT `fk_Supply_Storehouse1`
    FOREIGN KEY (`StorehouseId`)
    REFERENCES `sh_main`.`Storehouse` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Supply_Supplier1`
    FOREIGN KEY (`SupplierId`)
    REFERENCES `sh_main`.`Supplier` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Purchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Purchase` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Purchase` (
  `Id` INT NOT NULL,
  `CustomerId` INT NOT NULL,
  `StorehouseId` INT NOT NULL,
  `DateTime` DATETIME NOT NULL,
  `TotalPrice` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`Id`, `CustomerId`, `StorehouseId`),
  INDEX `fk_Purchase_Customer1_idx` (`CustomerId` ASC) VISIBLE,
  INDEX `fk_Purchase_Storehouse1_idx` (`StorehouseId` ASC) VISIBLE,
  CONSTRAINT `fk_Purchase_Customer1`
    FOREIGN KEY (`CustomerId`)
    REFERENCES `sh_main`.`Customer` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Purchase_Storehouse1`
    FOREIGN KEY (`StorehouseId`)
    REFERENCES `sh_main`.`Storehouse` (`Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Product_In_Purchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Product_In_Purchase` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Product_In_Purchase` (
  `ProductSKU` VARCHAR(45) NOT NULL,
  `PurchaseId` INT NOT NULL,
  `CustomerId` INT NOT NULL,
  `StorehouseId` INT NOT NULL,
  `Amount` INT NOT NULL,
  `Price` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`ProductSKU`, `PurchaseId`, `CustomerId`, `StorehouseId`),
  INDEX `fk_Purchase_has_Product_Product1_idx` (`ProductSKU` ASC) VISIBLE,
  INDEX `fk_Product_In_Purchase_Purchase1_idx` (`PurchaseId` ASC, `CustomerId` ASC, `StorehouseId` ASC) VISIBLE,
  CONSTRAINT `fk_Purchase_has_Product_Product1`
    FOREIGN KEY (`ProductSKU`)
    REFERENCES `sh_main`.`Product` (`SKU`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_In_Purchase_Purchase1`
    FOREIGN KEY (`PurchaseId` , `CustomerId` , `StorehouseId`)
    REFERENCES `sh_main`.`Purchase` (`Id` , `CustomerId` , `StorehouseId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sh_main`.`Product_In_Supply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sh_main`.`Product_In_Supply` ;

CREATE TABLE IF NOT EXISTS `sh_main`.`Product_In_Supply` (
  `SupplyId` INT NOT NULL,
  `SupplierId` INT NOT NULL,
  `StorehouseId` INT NOT NULL,
  `ProductSKU` VARCHAR(45) NOT NULL,
  `Amount` INT NOT NULL,
  `Price` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`SupplyId`, `SupplierId`, `StorehouseId`, `ProductSKU`),
  INDEX `fk_Supply_has_Product_Product1_idx` (`ProductSKU` ASC) VISIBLE,
  INDEX `fk_Supply_has_Product_Supply1_idx` (`SupplyId` ASC, `StorehouseId` ASC, `SupplierId` ASC) VISIBLE,
  CONSTRAINT `fk_Supply_has_Product_Supply1`
    FOREIGN KEY (`SupplyId` , `StorehouseId` , `SupplierId`)
    REFERENCES `sh_main`.`Supply` (`Id` , `StorehouseId` , `SupplierId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Supply_has_Product_Product1`
    FOREIGN KEY (`ProductSKU`)
    REFERENCES `sh_main`.`Product` (`SKU`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `sh_main`.`Customer`
-- -----------------------------------------------------
START TRANSACTION;
USE `sh_main`;
INSERT INTO `sh_main`.`Customer` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'AzonEcom', '003209, Читинская область, город Мытищи, въезд Балканская, 63', '+7 (922) 171-4965', 'luettgen.reggie@upton.net');
INSERT INTO `sh_main`.`Customer` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'BlueBerry', '350254, Челябинская область, город Подольск, въезд Бухарестская, 58', '+7 (922) 583-8345', 'fzemlak@okon.net');
INSERT INTO `sh_main`.`Customer` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'MassMarket', '825847, Ивановская область, город Ступино, пл. Ладыгина, 75', '(35222) 23-1191', 'jaquan57@yahoo.com');
INSERT INTO `sh_main`.`Customer` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'IndexMarket', '681211, Архангельская область, город Талдом, пр. Балканская, 74', '(495) 099-9510', 'bailey.jimmie@hammes.com');
INSERT INTO `sh_main`.`Customer` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'SberShop', '705607, Московская область, город Шатура, спуск Космонавтов, 01', '+7 (922) 549-4223', 'ofranecki@zulauf.info');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sh_main`.`Storehouse`
-- -----------------------------------------------------
START TRANSACTION;
USE `sh_main`;
INSERT INTO `sh_main`.`Storehouse` (`Id`, `Address`) VALUES (DEFAULT, '739460, Брянская область, город Балашиха, бульвар Славы, 36');
INSERT INTO `sh_main`.`Storehouse` (`Id`, `Address`) VALUES (DEFAULT, '522315, Самарская область, город Раменское, спуск Будапештсткая, 54');
INSERT INTO `sh_main`.`Storehouse` (`Id`, `Address`) VALUES (DEFAULT, '852591, Омская область, город Клин, наб. Славы, 40');
INSERT INTO `sh_main`.`Storehouse` (`Id`, `Address`) VALUES (DEFAULT, '713983, Смоленская область, город Егорьевск, въезд Бухарестская, 84');
INSERT INTO `sh_main`.`Storehouse` (`Id`, `Address`) VALUES (DEFAULT, '670762, Смоленская область, город Балашиха, пер. Будапештсткая, 20');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sh_main`.`Product`
-- -----------------------------------------------------
START TRANSACTION;
USE `sh_main`;
INSERT INTO `sh_main`.`Product` (`SKU`, `Name`) VALUES ('1', 'SomeProduct1');
INSERT INTO `sh_main`.`Product` (`SKU`, `Name`) VALUES ('2', 'SomeProduct2');
INSERT INTO `sh_main`.`Product` (`SKU`, `Name`) VALUES ('3', 'SomeProduct3');
INSERT INTO `sh_main`.`Product` (`SKU`, `Name`) VALUES ('4', 'SomeProduct4');
INSERT INTO `sh_main`.`Product` (`SKU`, `Name`) VALUES ('5', 'SomeProduct5');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sh_main`.`Supplier`
-- -----------------------------------------------------
START TRANSACTION;
USE `sh_main`;
INSERT INTO `sh_main`.`Supplier` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'ООО \"Международные поставки\"', '718482, Тульская область, город Шаховская, проезд Балканская, 20', '(35222) 65-3337', 'qbrown@hotmail.com');
INSERT INTO `sh_main`.`Supplier` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'ОАО \"Малые города\"', '768422, Новосибирская область, город Коломна, проезд Ломоносова, 52', '(495) 994-6293', 'littel.queen@gmail.com');
INSERT INTO `sh_main`.`Supplier` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'ЗАО \"China Import\"', '610346, Липецкая область, город Чехов, наб. Гоголя, 12', '8-800-770-9314', 'hill.terrill@grant.org');
INSERT INTO `sh_main`.`Supplier` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'ООО \"Григорьев А.П.\"', '809608, Тверская область, город Наро-Фоминск, пр. Чехова, 91', '(35222) 49-8366', 'pparisian@pfeffer.info');
INSERT INTO `sh_main`.`Supplier` (`Id`, `Name`, `Address`, `Phone`, `Email`) VALUES (DEFAULT, 'ООО \"Экспресс\"', '945880, Калужская область, город Одинцово, ул. Косиора, 47', '(495) 477-5731', 'bferry@yahoo.com');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sh_main`.`Storehouse_Has_Product`
-- -----------------------------------------------------
START TRANSACTION;
USE `sh_main`;
INSERT INTO `sh_main`.`Storehouse_Has_Product` (`StorehouseId`, `ProductSKU`, `Reminder`) VALUES (1, '1', 10);
INSERT INTO `sh_main`.`Storehouse_Has_Product` (`StorehouseId`, `ProductSKU`, `Reminder`) VALUES (1, '2', 20);
INSERT INTO `sh_main`.`Storehouse_Has_Product` (`StorehouseId`, `ProductSKU`, `Reminder`) VALUES (2, '3', 15);
INSERT INTO `sh_main`.`Storehouse_Has_Product` (`StorehouseId`, `ProductSKU`, `Reminder`) VALUES (2, '4', 30);
INSERT INTO `sh_main`.`Storehouse_Has_Product` (`StorehouseId`, `ProductSKU`, `Reminder`) VALUES (2, '5', 35);

COMMIT;

USE `sh_main`;

DELIMITER $$

USE `sh_main`$$
DROP TRIGGER IF EXISTS `sh_main`.`Product_In_Supply_AFTER_INSERT` $$
USE `sh_main`$$
CREATE DEFINER = CURRENT_USER TRIGGER `sh_main`.`Product_In_Supply_AFTER_INSERT` AFTER INSERT ON `Product_In_Supply` 
FOR EACH ROW
BEGIN
	
END$$


DELIMITER ;
